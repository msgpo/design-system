/* fix bug on Chrome */
body {
  @extend .no-scroll;
}
/* === page === */
.content {
  background-image: -webkit-linear-gradient(top, var(--main-bg-color, $pm-global-grey), var(--secondary-bg-color, $pm-global-altgrey) );
  background-image: linear-gradient(to bottom, var(--main-bg-color, $pm-global-grey), var(--secondary-bg-color, $pm-global-altgrey) );
  /*display: grid;
  grid-template-areas:
      "header header"
      "sidebar content";
      grid-template-columns: 180px auto;
      grid-template-rows: 60px auto;
 */
}

.header {
  padding: 1rem 2rem 1rem 0;
  height: $header-height;
}

@if $rtl-option == true {
  [dir="rtl"] {
    .header {
      padding: 1rem 0 1rem 2rem;
    }
  }

}

$transition-collapse-speed: .5s;
.sidebar {
  min-height: calc(100vh - #{$header-height});
  max-height: calc(100vh - #{$header-height});
  width: var(--width-sidebar, $width-sidebar);
  max-width: 22rem; // design request
  visibility: visible;
  transition: visibility 0s ease, transform .15s ease, width $transition-collapse-speed ease, opacity 1s ease ;
  transition-delay: 0s;
  overflow: auto;
  transition-delay: #{$transition-collapse-speed/8}; // tiny compensation for delay to appear
}


.collapse-button-container {
	width: var(--width-sidebar, #{$width-sidebar});
	animation: collaspeButtonIn $transition-collapse-speed ease;
	animation-fill-mode: forwards;
}
@keyframes collaspeButtonIn {
	0% {
		width: #{$width-sidebar};
	}
	100% {
		--width-sidebar: $width-sidebar-collapsed;
	}
}

.collapse-button {
	border: 3px solid var(--bgcolor-aside-link, $pm-global-altgrey);
	border-radius: 50%;
	width: $collapse-button-size;
	height: $collapse-button-size;
	animation: rotateIconOut .5s ease forwards;
	&:hover {
		background: $navigation-link-background-hover;
	}
}

.collapse-button.before-first-click {
	// before any clic, no animation
	animation-duration: 0s;
}


.logo-container {
  width: var(--width-sidebar, #{$width-sidebar});
  transition: $transition-collapse-speed max-width ease, $transition-collapse-speed width ease, opacity .15s ease;
  transition-delay: 0s;
  max-width: 22rem; // design request
}
.logo {
  width: 148px;
  height: 48px;
}
.logo--withoutPlan {
  height: 37px;
}
.logo g {
  fill: var(--fillcolor-logo, $pm-global-light);
}
.logo .plan {
  font-size: 1rem;
}

.sidebar-composeButton {
	&-text {
		animation: textComposeButtonIn $transition-collapse-speed;
	}
}

// to avoid compose button be too tall at the beginning of expanding
@keyframes textComposeButtonIn {
	0% {
		overflow: hidden;
		width: 0;
		height: 0;
	}
	60% {
		overflow: hidden;
		width: 0;
		height: 0;
	}
	100% {
		width: auto;
		height: auto;
	}
}

.sidebar-is-collapsed {

	.is-hidden-when-sidebar-is-collapsed {
		display: none;
	}
	.is-shown-when-sidebar-is-collapsed {
		display: flex;
	}

	.logo-container {
		max-width: 0;
		transition: 0s max-width ease, 0s width ease, opacity .15s ease;
		// visibility: hidden;
		// opacity: 0;
	}

	.collapse-button-container,
	.sidebar {
	   width: $width-sidebar-collapsed;
	   transition-delay: 0s;
	}

	.navigation__icon {
		margin-right: auto;
		margin-left: auto;
	}

	.navigation__item [data-level] {
		padding-left: 0;
	}

	.sidebar-composeButton {
	   padding-left: 0;
	   padding-right: 0;
	   &-icon {
		   margin: 0 auto;
	   }
	   &-text {
		   margin-right: 0;
	   }
	}

	.collapse-button-container .collapse-button--expandButton {
		animation: rotateIconIn .5s ease forwards;
	}

	.navigation__link--groupHeader-link {
		text-align: center;
	}

}

@keyframes rotateIconIn {
	0% { transform: rotateZ(0); }
	100% { transform: rotateZ(-180deg); }
}
@keyframes rotateIconOut {
	0% { transform: rotateZ(-180deg); }
	100% { transform: rotateZ(0); }
}





.main {
  border-radius: 4px 4px 0 0;
  margin-right: 20px;
  z-index: 1; // in case of drop shadow
  box-shadow: var(--boxshadow-main, none);
}
@if $rtl-option == true {
  [dir="rtl"] {
    .main {
      margin-right: 0;
      margin-left: 20px;
    }
  }
}


.main-area {
  background: var(--bgcolor-main-area, $white);
  color: var(--color-main-area, $pm-global-grey);
  height: calc(100vh - #{$header-height} );
  max-height: calc(100vh - #{$header-height} );
  overflow: auto;
  border-radius: 4px 4px 0 0;

  &.no-scroll {
    overflow: hidden;
  }
}
// only for Angular
.content-wrapper {
  height: calc(100vh - #{$header-height} );
  max-height: calc(100vh - #{$header-height} );
}
.main-area--withToolbar { // only for Angular this one
  @extend .main-area;
  height: calc(100vh - #{$header-height} - #{$toolbar-height} );
  max-height: calc(100vh - #{$header-height} - #{$toolbar-height} );
  border-radius: 0;
}

// only for Safari mobile shitty way to handle vh unit
$height-for-tablet: 5em !default;
$height-for-mobile: 8em !default;
.main-area--paddingFix {
  padding-bottom: $height-for-tablet;
}
.main-area-content--paddingFix::after {
	content:'';
	display: flex;
	width: 100%;
	height: $height-for-tablet;
}
@include respond-to($breakpoint-small) {
  .main-area--paddingFix {
    padding-bottom: $height-for-mobile;
    // thanks Apple for the fixed toolbar at the bottom
  }
  .main-area-content--paddingFix::after {
	height: $height-for-mobile;
  }
}

.main-full {
  height: 100vh;
  overflow: auto;
  @extend .bg-global-altgrey-gradient;
}
.main-area--noHeader {
  @extend .main-area;
  height: calc(100vh);
  max-height: calc(100vh);
}
.main-area--withToolbar--noHeader {
  @extend .main-area--withToolbar;
  height: calc(100vh - #{$toolbar-height} );
  max-height: calc(100vh - #{$toolbar-height} );

  .view-column-detail {
    height: calc(100vh - #{$toolbar-height} );
    max-height: calc(100vh - #{$toolbar-height} );
  }
}

.main-area-content {
  background: var(--bgcolor-main-area, #{$white});
}
